{
    "type": "Ext.app.ViewController",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "myviewport",
        "designer|userClassName": "MyViewportViewController"
    },
    "designerId": "e1541dd2-78b7-4a2d-88f4-4a332f5393d8",
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "viewModel"
                ],
                "fn": "initViewModel",
                "implHandler": [
                    "var me = this;",
                    "",
                    "viewModel.bind({",
                    "    photo: '{photo}',",
                    "    viewer: '{singlephotoviewer}'",
                    "}, me.reactPhotoAndViewerChange, me);"
                ]
            },
            "name": "initViewModel",
            "designerId": "cca4a942-eb6c-4922-86d8-c9153c16fbcb"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "Show appropriate panel when there is a selected photo.",
                    "If not photo, hide everything."
                ],
                "designer|params": [
                    "value"
                ],
                "fn": "reactPhotoAndViewerChange",
                "implHandler": [
                    "var me = this,",
                    "",
                    "    photo = value.photo,",
                    "    viewer = value.viewer,",
                    "",
                    "    hasPhoto = !Ext.isEmpty(photo),",
                    "",
                    "    panel = me.lookupReference('selectedphotopanel'),",
                    "    win = me.getSelectedPhotoWindow();",
                    "",
                    "switch (viewer) {",
                    "",
                    "    case 'panel':",
                    "        win.hide();",
                    "        active = panel;",
                    "        break;",
                    "",
                    "    case 'window':",
                    "        panel.hide();",
                    "        active = win;",
                    "        break;",
                    "",
                    "    default:",
                    "        console.error('Unknown Viewer Type: ' + viewer);",
                    "}",
                    "",
                    "active.setVisible(hasPhoto);"
                ]
            },
            "name": "reactPhotoAndViewerChange",
            "designerId": "22b6d08c-0d04-4fe3-a8e2-5cb87db8538f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "Returns the Selected Photo Window instance.",
                    "Will create a new photo window if it is not yet defined."
                ],
                "fn": "getSelectedPhotoWindow",
                "implHandler": [
                    "var me = this;",
                    "",
                    "if (!me._selectedPhotoWindow) {",
                    "",
                    "    me._selectedPhotoWindow = me.getView().add({",
                    "        xtype: 'selectedwindow',",
                    "        tools: [",
                    "            {",
                    "                xtype: 'tool',",
                    "                type: 'minimize',",
                    "                tooltip: 'Dock Panel',",
                    "                listeners: {",
                    "                    scope: me,",
                    "                    click: me.onUseSelectedPhotoPanelClick",
                    "                }",
                    "            }",
                    "        ]",
                    "    });",
                    "}",
                    "",
                    "return me._selectedPhotoWindow;"
                ]
            },
            "name": "getSelectedPhotoWindow",
            "designerId": "527fe28a-f4d2-470c-8c13-845aa9bf81d7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "Returns the Selected Photo Window instance.",
                    "Will create a new photo window if it is not yet defined."
                ],
                "fn": "onUseSelectedPhotoPanelClick",
                "implHandler": [
                    "this.getViewModel().set('singlephotoviewer', 'panel');"
                ]
            },
            "name": "onUseSelectedPhotoPanelClick",
            "designerId": "2d2e0ed4-a2ed-49d1-a52c-b86c3f78482f"
        }
    ]
}