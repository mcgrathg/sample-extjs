/*
 * File: app/view/ExpandedPhotoWindow.js
 *
 * This file was generated by Sencha Architect version 4.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Examples.view.ExpandedPhotoWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.expandedphotowindow',

    requires: [
        'Examples.view.ExpandedPhotoWindowViewModel',
        'Examples.view.ExpandedPhotoWindowViewController',
        'Examples.view.FullSizePhoto',
        'Ext.Img',
        'Ext.form.FieldContainer',
        'Ext.form.field.Display',
        'Ext.panel.Tool'
    ],

    controller: 'expandedphotowindow',
    viewModel: {
        type: 'expandedphotowindow'
    },
    autoShow: true,
    frame: true,
    closeAction: 'hide',

    bind: {
        title: '{photo.title} (Full Size)'
    },
    items: [
        {
            xtype: 'fullsizephoto'
        },
        {
            xtype: 'fieldcontainer',
            items: [
                {
                    xtype: 'displayfield',
                    fieldLabel: 'Title',
                    bind: {
                        value: '{photo.title}'
                    }
                },
                {
                    xtype: 'displayfield',
                    fieldLabel: 'URL',
                    bind: {
                        value: '<a href="{photo.url}" target="_blank">{photo.url}</a>'
                    }
                },
                {
                    xtype: 'displayfield',
                    fieldLabel: 'Thumbnail URL',
                    bind: {
                        value: '<a href="{photo.thumbnailUrl}" target="_blank">{photo.thumbnailUrl}</a>'
                    }
                }
            ]
        }
    ],
    tools: [
        {
            xtype: 'tool',
            type: 'minus'
        },
        {
            xtype: 'tool',
            type: 'minimize',
            listeners: {
                click: 'onToolClick'
            }
        },
        {
            xtype: 'tool',
            type: 'maximize'
        },
        {
            xtype: 'tool',
            type: 'plus'
        }
    ]

});